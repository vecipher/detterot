name: ci
on: [push, pull_request]

jobs:
  ci:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libasound2-dev pkg-config
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all-targets --all-features -- -D warnings
      - run: cargo test --all --all-features
      - run: ci/grep_banned_random.sh
      - name: Record deterministic outputs
        run: |
          set -euo pipefail
          mkdir -p target/repro-check
          for path in repro/records/*.json; do
            name=$(basename "$path")
            cargo run -p game --features deterministic -- --mode record \
              --io "target/repro-check/$name" \
              --fixed-dt 0.0333333333 --headless
          done
      - name: Compare recorded outputs to goldens
        run: |
          set -euo pipefail
          for path in repro/records/*.json; do
            name=$(basename "$path")
            cmp --silent "$path" "target/repro-check/$name" || {
              echo "record mismatch for $name" >&2
              exit 1
            }
            hash_path="${path%.json}.hash"
            cmp --silent "$hash_path" "target/repro-check/${name%.json}.hash" || {
              echo "hash mismatch for $name" >&2
              exit 1
            }
          done
      - name: Replay deterministic goldens
        run: |
          set -euo pipefail
          for path in repro/records/*.json; do
            cargo run -p game --features deterministic -- --mode replay \
              --io "$path" --fixed-dt 0.0333333333 --headless \
              --continue-after-mismatch false
          done
      - name: Upload recorded outputs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: repro-records-${{ matrix.os }}
          path: target/repro-check
