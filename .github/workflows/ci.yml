name: ci

on:
  push:
  pull_request:

jobs:
  checks:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libasound2-dev pkg-config
      - name: Rustfmt
        run: cargo fmt --all -- --check
      - name: Clippy (workspace)
        run: cargo clippy --workspace --all-targets -- -D warnings
      - name: Clippy (deterministic feature)
        run: cargo clippy -p game --all-targets --features deterministic -- -D warnings
      - name: Clippy (avian physics feature)
        run: cargo clippy -p game --all-targets --features avian_physics -- -D warnings
      - name: Tests (workspace)
        run: cargo test --workspace
      - name: Tests (deterministic game)
        run: cargo test -p game --features deterministic
      - name: Tests (avian physics game)
        run: cargo test -p game --features avian_physics
      - name: Determinism guard
        run: ci/grep_banned_random.sh

  determinism:
    needs: checks
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libasound2-dev pkg-config
      - name: Replay golden tests
        run: cargo test -p game --features deterministic --test replay_golden
      - name: Headless replay verification
        run: |
          set -euo pipefail
          for record in repro/records/leg_seed_*.json; do
            cargo run -p game --features deterministic -- --mode replay --io "$record" --fixed-dt 0.0333333333 --headless --continue-after-mismatch false;
          done
      - name: Upload golden records on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: repro-records-${{ matrix.os }}
          path: |
            repro/records/*.json
            repro/records/*.hash

  trading_goldens:
    needs: checks
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libasound2-dev pkg-config
      - name: Trading replay tests
        run: cargo test -p game --features deterministic --test trading_replay
      - name: Verify trading hashes
        run: |
          set -euo pipefail
          for snapshot in repro/trading/trade_seed_*.json; do
            cargo run -p repro_harness -- --replay "$snapshot" --assert-hash "${snapshot%.json}.hash"
          done
      - name: Upload trading goldens on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: trading-goldens-${{ matrix.os }}
          path: |
            repro/trading/*.json
            repro/trading/*.hash
